{% import "encoding/json" %}
{% import "strings" %}
{% import "meguca/config" %}
{% import "meguca/lang" %}
{% import "meguca/auth" %}

{% func renderIndex(pos auth.ModerationLevel) %}{% stripspace %}
	{% code conf := config.Get() %}
	{% code ln := lang.Get() %}
	{% code confJSON, confHash := config.GetClient() %}
	{% code boards := config.GetBoards() %}
	<!doctype html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0">
		<meta name="application-name" content="Egophobe">
		<meta name="description" content="Imageboard en temps réel">
		<link type="image/x-icon" rel="shortcut icon" id="favicon" href="/assets/favicons/default.ico">
		<title id="page-title">
			{% comment %}
				Only expanded in the second parse of the template
			{% endcomment %}
			$$$
		</title>
		<link rel="manifest" href="/assets/mobile/manifest.json">
		{% comment %}
			Main and theme-specific stylesheets
		{% endcomment %}
		<link rel="stylesheet" href="/assets/css/base.css">
		<link rel="stylesheet" id="theme-css" href="/assets/css/$$$.css">
		<style id="user-background-style"></style>
		{% comment %}
			Hide various elements that are dysfunctional without JS
		{% endcomment %}
		<noscript>
			<link rel="stylesheet" href="/assets/css/noscript.css">
		</noscript>
		{% comment %}
			Configuration injection and theme adjustment
		{% endcomment %}
		<script>
			var config = {%z= confJSON %},
				configHash = '{%s= confHash %}',
				{% code boardJSON, _ := json.Marshal(boards) %}
				boards = {%z= boardJSON %},
				position = {%d int(pos) %};
			if (localStorage.theme !== config.DefaultCSS) {
				document.getElementById('theme-css').href = '/assets/css/' + localStorage.theme + '.css'
			}
		</script>
		{% comment %}
			Client-side templates for various views
		{% endcomment %}
		<template name="article">
			{%= deletedToggle() %}
			<header class="spaced">
				<input type="checkbox" class="mod-checkbox hidden">
				<h3 hidden></h3>
				<b class="name spaced"></b>
				<img class="flag" hidden>
				<time></time>
				<nav>
					<a>
						No.
					</a>
					<a class="quote"></a>
				</nav>
				<a class="control">
					<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 8 8">
						<path d="M1.5 0l-1.5 1.5 4 4 4-4-1.5-1.5-2.5 2.5-2.5-2.5z" transform="translate(0 1)" />
					</svg>
				</a>
			</header>
			<div class="post-container">
				<blockquote></blockquote>
			</div>
		</template>
		<template name="figcaption">
			<figcaption class="spaced">
				<a class="image-toggle act" hidden></a>
				<span class="spaced image-search-container">
				</span>
				<span class="fileinfo">
					<span class="media-artist"></span>
					<span class="media-title"></span>
					<span hidden class="has-audio">♫</span>
					<span class="media-length"></span>
					<span hidden class="is-apng">APNG</span>
					<span class="filesize"></span>
					<span class="dims"></span>
				</span>
				<a></a>
			</figcaption>
		</template>
		<template name="figure">
			<figure>
				<a target="_blank">
					<img>
				</a>
			</figure>
		</template>
		<template name="post-controls">
			<form class="antispam-captcha">
				{%= captcha() %}
				{%= submit(true) %}
			</form>
			<div id="post-controls">
				<input name="done" type="button" value="{%s= ln.UI["done"] %}">
				{%= cancel() %}
				<span class="upload-container" hidden>
					<input type="file" name="image" accept="image/png, image/gif, image/jpeg, video/webm, video/ogg, audio/ogg, application/ogg, video/mp4, audio/mp4, audio/mp3, application/zip, application/x-7z-compressed, application/x-xz, application/x-gzip, audio/x-flac, text/plain">
					<span data-id="spoiler">
						<label>
							<input type="checkbox" name="spoiler">
							{%s= ln.Common.Posts["spoiler"] %}
						</label>
					</span>
					<strong class="upload-status"></strong>
				</span>
			</div>
		</template>
		<template name="notification">
			<div class="notification modal glass show">
				<b class="admin"><b>
			</div>
		</template>
		<template name="sticky">
			{%= renderSticky(true) %}
		</template>
		<template name="locked">
			{%= renderLocked(true) %}
		</template>
		{% if pos > auth.NotLoggedIn %}
			<template name="keyValue">
				{%= keyValueForm("", "") %}
			</template>
			<template name="arrayItem">
				{%= arrayItemForm("") %}
			</template>
		{% endif %}
	</head>
	<body>
		<div id="user-background"></div>
		<div id="overlay-container">
			{% comment %}
				Top banner
			{% endcomment %}
			<span id="banner" class="glass">
				<nav id="board-navigation">
					<noscript>
						[
						<a href="/all/">
							all
						</a>
						{% for _, b := range boards %}
							{% space %}/{% space %}
							<a href="/{%s= b %}/">
								{%s= b %}
							</a>
						{% endfor %}
						]
					</noscript>
				</nav>
				{% comment %}
					For r/a/dio stream status and such
				{% endcomment %}
				<b id="banner-center"></b>
				{% comment %}
					Various buttons, that unhide modal windows
				{% endcomment %}
				<a id="banner-options" class="banner-float" title="{%s= ln.UI["options"] %}">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
						<path d="M28 14h0.5c0.825 0 1.5-0.675 1.5-1.5v-5c0-0.825-0.675-1.5-1.5-1.5h-0.5v-6h-4v6h-0.5c-0.825 0-1.5 0.675-1.5 1.5v5c0 0.825 0.675 1.5 1.5 1.5h0.5v18h4v-18zM24 8h4v4h-4v-4zM18.5 26c0.825 0 1.5-0.675 1.5-1.5v-5c0-0.825-0.675-1.5-1.5-1.5h-0.5v-18h-4v18h-0.5c-0.825 0-1.5 0.675-1.5 1.5v5c0 0.825 0.675 1.5 1.5 1.5h0.5v6h4v-6h0.5zM14 20h4v4h-4v-4zM8.5 14c0.825 0 1.5-0.675 1.5-1.5v-5c0-0.825-0.675-1.5-1.5-1.5h-0.5v-6h-4v6h-0.5c-0.825 0-1.5 0.675-1.5 1.5v5c0 0.825 0.675 1.5 1.5 1.5h0.5v18h4v-18h0.5zM4 8h4v4h-4v-4z"></path>
					</svg>
				</a>
				<a id="banner-identity" class="banner-float" title="{%s= ln.UI["identity"] %}">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
						<path d="M27 0h-24c-1.65 0-3 1.35-3 3v26c0 1.65 1.35 3 3 3h24c1.65 0 3-1.35 3-3v-26c0-1.65-1.35-3-3-3zM26 28h-22v-24h22v24zM8 18h14v2h-14zM8 22h14v2h-14zM10 9c0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3s-3-1.343-3-3zM15 12h-4c-1.65 0-3 0.9-3 2v2h10v-2c0-1.1-1.35-2-3-2z"></path>
					</svg>
				</a>
				<a id="banner-account" class="banner-float" title="{%s= ln.UI["account"] %}">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
						<path d="M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z"></path>
					</svg>
				</a>
				<a id="banner-home" href="https://www.egopho.be/" class="banner-float" title="{%s= ln.UI["home"] %}">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32">
						<path d="M32 31.125h-8.938v-6.188h-8.75v-6.875h8.313v-4.25h-8.313v-6.75h8.75v-4.188h-14.125v28.25h-8.938v-2h6.938v-28.25h18.125v8.188h-8.75v2.75h8.313v8.25h-8.313v2.875h8.75v6.188h6.938z"></path>
					</svg>
				</a>
				<span id="banner-extensions" class="hide-empty banner-float"></span>
				<b id="thread-post-counters" class="act hide-empty banner-float" title="{%s= ln.Common.UI["postsImages"] %}"></b>
				<b id="sync-counter" class="act hide-empty banner-float" title="{%s= ln.UI["syncCount"] %}"></b>
				{% comment %}
					Websocket connection status indicator
				{% endcomment %}
				<b id="sync" class="banner-float" title="{%s= ln.UI["sync"] %}"></b>
			</span>
			{% comment %}
				For modal windows
			{% endcomment %}
			<div id="modal-overlay" class="overlay">
				{% comment %}
					Information panel
				{% endcomment %}
				<div id="FAQ" class="modal glass">
					{%s= strings.Replace(conf.FAQ, "\n", "<br>", -1) %}
				</div>
				{% comment %}
					Post creation credentials
				{% endcomment %}
				<div id="identity" class="modal glass">
					{% code fields := specs["identity"] %}
					{% if pos > auth.NotStaff %}
						{% code fields = make([]inputSpec, 1, len(fields)+1) %}
						{% code fields[0] = staffTitleSpec %}
						{% code fields = append(fields, specs["identity"]...) %}
					{% endif %}
					{%= table(fields) %}
				</div>
				{% comment %}
					Account login and registration
				{% endcomment %}
				<div id="account-panel" class="modal glass">
					{% if pos == auth.NotLoggedIn %}
						<div id="login-forms">
							{% code f := ln.Forms %}
							{%= tabButts([]string{f["id"][0], f["register"][0]}) %}
							<div class="tab-cont">
								<div class="tab-sel" data-id="0">
									<form id="login-form">
										{%= table(specs["login"]) %}
										{%= captcha() %}
										{%= submit(false) %}
									</form>
								</div>
								<div data-id="1">
									<form id="registration-form">
										{%= table(specs["register"]) %}
										{%= captcha() %}
										{%= submit(false) %}
									</form>
								</div>
							</div>
						</div>
					{% else %}
						<div id="form-selection">
							{% for _, l := range [...]string{
								"logout", "logoutAll", "changePassword",
							} %}
								<a id="{%s= l %}">
									{%s= ln.UI[l] %}
									<br>
								</a>
							{% endfor %}
							{% if pos == auth.BoardOwner %}
							{% for _, b := range [...]string{
								"configureBoard", "assignStaff",
							} %}
								<a id="{%s= b %}">
									{%s= ln.UI[b] %}
									<br>
								</a>
							{% endfor %}
							{% endif %}
							{% if pos == auth.Admin %}
							{% for _, a := range [...]string{
								"configureBoard", "assignStaff", "setBanners",
								"setLoading", "createBoard", "deleteBoard",
								"configureServer",
							} %}
								<a id="{%s= a %}">
									{%s= ln.UI[a] %}
									<br>
								</a>
							{% endfor %}
							{% endif %}
						</div>
					{% endif %}
				</div>
				{% comment %}
					Options panel
				{% endcomment %}
				<div id="options" class="modal glass">
					{%= tabButts(ln.Tabs) %}
					<div class="tab-cont">
						{% for i, sp := range optionSpecs %}
							<div data-id="{%d i %}"{% if i == 0 %}{% space %}class="tab-sel"{% endif %}>
								{%= options(sp, ln) %}
								{% comment %}
									Hidden post reset, Export and Import links for first tab
								{% endcomment %}
								{% if i == 0 %}
									<br>
									<span class="spaced">
										{% for _, id := range [...]string{"export", "import", "hidden"} %}
											<a id="{%s= id %}" title="{%s= ln.Forms[id][1] %}">
												{%s= ln.Forms[id][0] %}
											</a>
										{% endfor %}
									</span>
									{% comment %}
										Hidden file input for uploading the JSON
									{% endcomment %}
									<input type="file" id="importSettings" hidden>
								{% endif %}
							</div>
						{% endfor %}
					</div>
				</div>
				{% if pos > auth.NotStaff %}
					<div id="moderation-panel" class="modal glass">
						<form>
							{% if pos >= auth.Moderator %}
								<div id="ban-form" class="hidden">
									{% for _, id  := range [...]string{"day", "hour", "minute"} %}
										<input type="number" name="{%s= id %}" min="0" placeholder="{%s= strings.Title(ln.Common.Plurals[id][1]) %}">
									{% endfor %}
									<br>
									<input type="text" name="reason" required class="full-width" placeholder="{%s= ln.UI["reason"] %}" disabled>
									<br>
									{% if pos == auth.Admin %}
										<label>
											<input type="checkbox" name="global">
											{%s= ln.UI["global"] %}
										</label>
									{% endif %}
								</div>
							{% endif %}
							{% if pos == auth.Admin %}
								<div id="notification-form" class="hidden">
									<input type="text" name="notification" required class="full-width" placeholder="{%s= ln.UI["text"] %}" style="min-width: 20em;" disabled>
									<br>
								</div>
							{% endif %}
							<input type="checkbox" name="showCheckboxes">
							<select name="action">
								{% code ids := append(make([]string, 0, 5), "deletePost", "deleteImage", "spoilerImage") %}
								{% if pos >= auth.Moderator %}
									{% code ids = append(ids, "ban") %}
								{% endif %}
								{% if pos == auth.Admin %}
									{% code ids = append(ids, "notification") %}
								{% endif %}
								{% for _, id := range ids %}
									<option value="{%s= id %}">
										{%s= ln.UI[id] %}
									</option>
								{% endfor %}
							</select>
							<input type="button" value="{%s= ln.UI["clear"] %}" name="clear">
							{%= submit(false) %}
						</form>
					</div>
				{% endif %}
			</div>
		</div>
		{% comment %}
			For hover previews
		{% endcomment %}
		<div class="overlay" id="hover-overlay"></div>
		<div id="page-container">
			<section id="left-panel" class="side-panel glass"></section>
			{% comment %}
				Used to move #threads to the side, when a #left-panel is shown
			{% endcomment %}
			<div id="left-spacer" class="side-spacer"></div>
			{% comment %}
				Contains posts, page navigation, title, image banner and the catalog.
				Is injected on the second parse of this template
			{% endcomment %}
			<section id="threads">
				{% comment %}
					Post HTML and data
				{% endcomment %}
				$$$
			</section>
			<section id="right-panel" class="side-panel glass"></section>
			<div id="right-spacer" class="side-spacer"></div>
		</div>
		{% comment %}
			Dynamic module loader
		{% endcomment %}
		<script src="/assets/js/vendor/almond.js"></script>
		<script id="lang-data" type="application/json">
			{% code buf, _ := json.Marshal(ln.Common) %}
			{%z= buf %}
		</script>
		<script id="board-title-data" type="application/json">
			{% code buf, _ = json.Marshal(config.GetBoardTitles()) %}
			{%z= buf %}
		</script>
		<script src="/assets/js/scripts/loader.js"></script>
	</body>
{% endstripspace %}{% endfunc %}
